{"ast":null,"code":"var _jsxFileName = \"/Users/marystef/Documents/GitHub/weather-react/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  function handelResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      city: \"Stockholm\"\n    });\n  }\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onS: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city\",\n              className: \"form-control\",\n              autoFocus: \"on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"2513f3c728b1b5ff4f4347e1a6af22b8\";\n    let city = \"stockholm\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handelResponse);\n    return \" Loading...\";\n  }\n}\n_s(Weather, \"bNw92yRwswmVYnT8Xo1pKwW7I9c=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","WeatherInfo","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","ready","handelResponse","response","console","log","data","temperature","main","temp","date","Date","dt","wind","speed","humidity","description","weather","city","className","children","onS","type","placeholder","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","value","apiKey","apiUrl","get","then","_c","$RefreshReg$"],"sources":["/Users/marystef/Documents/GitHub/weather-react/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport \"./Weather.css\";\n\nexport default function Weather() {\n  \n  const [weatherData, setWeatherData] = useState({ready: false});\n\n  function handelResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n    ready: true,\n      temperature: response.data.main.temp,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      city: \"Stockholm\",\n    });\n    \n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onS>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n       <WeatherInfo data= {weatherData}/>\n      </div>\n    );\n  } else {\n    const apiKey = \"2513f3c728b1b5ff4f4347e1a6af22b8\";\n    let city = \"stockholm\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handelResponse);\n\n    return \" Loading...\";\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}